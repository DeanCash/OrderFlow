// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OrderFlow.Data;

#nullable disable

namespace OrderFlow.Migrations
{
    [DbContext(typeof(DatabaseDbContext))]
    [Migration("20240307080026_migraz")]
    partial class migraz
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("OrderFlow.Data.Tables.Consumable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Consumables");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Geroosterd brood met verse tomaten, knoflook, basilicum en olijfolie.",
                            ImagePath = "",
                            Name = "Bruschetta al Pomodoro",
                            Price = 7.50m,
                            Type = 0
                        },
                        new
                        {
                            Id = 2,
                            Description = "Gefrituurde inktvisringen met citroen en pikante tomatensaus.",
                            ImagePath = "",
                            Name = "Calamari Fritti",
                            Price = 9.00m,
                            Type = 0
                        },
                        new
                        {
                            Id = 3,
                            Description = "Buffelmozzarella, tomaten, verse basilicum en balsamico-glazuur.",
                            ImagePath = "",
                            Name = "Caprese Salade",
                            Price = 8.50m,
                            Type = 0
                        },
                        new
                        {
                            Id = 4,
                            Description = "Geserveerd met citroen-dille saus, seizoensgroenten en aardappelpuree.",
                            ImagePath = "",
                            Name = "Gegrilde Zalmfilet",
                            Price = 18.50m,
                            Type = 1
                        },
                        new
                        {
                            Id = 5,
                            Description = "Romige saus met spek, Parmezaanse kaas en eigeel.",
                            ImagePath = "",
                            Name = "Pasta Carbonara",
                            Price = 14.00m,
                            Type = 1
                        },
                        new
                        {
                            Id = 6,
                            Description = "Malse kipfilet met basilicum-pestosaus, geserveerd met geroosterde groenten.",
                            ImagePath = "",
                            Name = "Gegrilde Kip Pesto",
                            Price = 16.50m,
                            Type = 1
                        },
                        new
                        {
                            Id = 7,
                            Description = "Traditioneel Italiaans dessert met lagen koffie gedrenkte biscuit, mascarpone en cacao.",
                            ImagePath = "",
                            Name = "Tiramisu",
                            Price = 7.00m,
                            Type = 2
                        },
                        new
                        {
                            Id = 8,
                            Description = "Warme chocoladetaart met een vloeibare chocoladekern, geserveerd met vanille-ijs.",
                            ImagePath = "",
                            Name = "Chocolade Lava Cake",
                            Price = 8.50m,
                            Type = 2
                        },
                        new
                        {
                            Id = 9,
                            Description = "Verse munt, limoen, suiker en rum, afgemaakt met bruiswater.",
                            ImagePath = "",
                            Name = "Mojito",
                            Price = 9.00m,
                            Type = 2
                        },
                        new
                        {
                            Id = 10,
                            Description = "Gemengd fruit met vruchtensap en een vleugje grenadine.",
                            ImagePath = "",
                            Name = "Fruitige Mocktail",
                            Price = 6.50m,
                            Type = 2
                        },
                        new
                        {
                            Id = 11,
                            Description = "Sterke zwarte koffie.",
                            ImagePath = "",
                            Name = "Espresso",
                            Price = 2.50m,
                            Type = 3
                        },
                        new
                        {
                            Id = 12,
                            Description = "Espresso met gestoomde melk en een laagje melkschuim.",
                            ImagePath = "",
                            Name = "Cappuccino",
                            Price = 3.50m,
                            Type = 3
                        },
                        new
                        {
                            Id = 13,
                            Description = "Gekoelde koffie met ijsblokjes.",
                            ImagePath = "",
                            Name = "Iced Coffee",
                            Price = 4.00m,
                            Type = 3
                        },
                        new
                        {
                            Id = 14,
                            Description = "Vers geperst sinaasappelsap.",
                            ImagePath = "",
                            Name = "Verse Sinaasappelsap",
                            Price = 4.50m,
                            Type = 4
                        },
                        new
                        {
                            Id = 15,
                            Description = "Verfrissende limonade met een vleugje citroen.",
                            ImagePath = "",
                            Name = "Citroenlimonade",
                            Price = 3.50m,
                            Type = 4
                        },
                        new
                        {
                            Id = 16,
                            Description = "Ambachtelijk gebrouwen pale ale.",
                            ImagePath = "",
                            Name = "Lokale Pale Ale",
                            Price = 5.50m,
                            Type = 5
                        },
                        new
                        {
                            Id = 17,
                            Description = "Licht en verfrissend tarwebier.",
                            ImagePath = "",
                            Name = "Witbier",
                            Price = 4.50m,
                            Type = 5
                        },
                        new
                        {
                            Id = 18,
                            Description = "Fresh and juicy apple",
                            ImagePath = "apple.png",
                            Name = "Apple",
                            Price = 1.1m,
                            Type = 0
                        },
                        new
                        {
                            Id = 19,
                            Description = "Delicious cheesy pizza",
                            ImagePath = "pizza.png",
                            Name = "Pizza",
                            Price = 5.15m,
                            Type = 1
                        },
                        new
                        {
                            Id = 20,
                            Description = "Classic sandwich with ham and cheese",
                            ImagePath = "sandwich.png",
                            Name = "Sandwich",
                            Price = 4.3m,
                            Type = 0
                        },
                        new
                        {
                            Id = 21,
                            Description = "Buttery and flaky croissant",
                            ImagePath = "croissant.png",
                            Name = "Croissant",
                            Price = 2m,
                            Type = 0
                        },
                        new
                        {
                            Id = 22,
                            Description = "Classic pasta with marinara sauce",
                            ImagePath = "pasta.png",
                            Name = "Pasta",
                            Price = 9.3m,
                            Type = 1
                        },
                        new
                        {
                            Id = 23,
                            Description = "Juicy beef burger with cheese",
                            ImagePath = "burger.png",
                            Name = "Burger",
                            Price = 4.4m,
                            Type = 1
                        },
                        new
                        {
                            Id = 24,
                            Description = "Refreshing orange juice",
                            ImagePath = "orange-juice.jpg",
                            Name = "Orange Juice",
                            Price = 2m,
                            Type = 4
                        },
                        new
                        {
                            Id = 25,
                            Description = "Carbonated cola drink",
                            ImagePath = "cola.png",
                            Name = "Cola",
                            Price = 1.4m,
                            Type = 4
                        },
                        new
                        {
                            Id = 26,
                            Description = "Refreshing iced tea",
                            ImagePath = "icedtea.png",
                            Name = "Iced Tea",
                            Price = 2m,
                            Type = 4
                        },
                        new
                        {
                            Id = 27,
                            Description = "Homemade lemonade",
                            ImagePath = "lemonade.png",
                            Name = "Lemonade",
                            Price = 3m,
                            Type = 4
                        },
                        new
                        {
                            Id = 28,
                            Description = "Rich and aromatic coffee",
                            ImagePath = "coffee.jpg",
                            Name = "Coffee",
                            Price = 3.1m,
                            Type = 3
                        },
                        new
                        {
                            Id = 29,
                            Description = "Creamy milkshake",
                            ImagePath = "milkshake.png",
                            Name = "Milkshake",
                            Price = 4m,
                            Type = 4
                        });
                });

            modelBuilder.Entity("OrderFlow.Data.Tables.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("IsProcessed")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("OrderedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("ProcessedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("TableId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TableId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("OrderFlow.Data.Tables.OrderedConsumable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ConsumableId")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.HasIndex("ConsumableId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderedConsumables");
                });

            modelBuilder.Entity("OrderFlow.Data.Tables.QR_Code", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("QR_Codes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImagePath = "/qr_code1.png"
                        },
                        new
                        {
                            Id = 2,
                            ImagePath = "/qr_code2.png"
                        },
                        new
                        {
                            Id = 3,
                            ImagePath = "/qr_code3.png"
                        },
                        new
                        {
                            Id = 4,
                            ImagePath = "/qr_code4.png"
                        });
                });

            modelBuilder.Entity("OrderFlow.Data.Tables.Table", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("QRCodeId")
                        .HasColumnType("int");

                    b.Property<string>("TableCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("QRCodeId");

                    b.ToTable("Tables");
                });

            modelBuilder.Entity("OrderFlow.Data.Tables.Order", b =>
                {
                    b.HasOne("OrderFlow.Data.Tables.Table", "Table")
                        .WithMany("Orders")
                        .HasForeignKey("TableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Table");
                });

            modelBuilder.Entity("OrderFlow.Data.Tables.OrderedConsumable", b =>
                {
                    b.HasOne("OrderFlow.Data.Tables.Consumable", "Consumable")
                        .WithMany("OrderedConsumables")
                        .HasForeignKey("ConsumableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OrderFlow.Data.Tables.Order", "Order")
                        .WithMany("OrderedConsumables")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Consumable");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("OrderFlow.Data.Tables.Table", b =>
                {
                    b.HasOne("OrderFlow.Data.Tables.QR_Code", "QRCode")
                        .WithMany()
                        .HasForeignKey("QRCodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("QRCode");
                });

            modelBuilder.Entity("OrderFlow.Data.Tables.Consumable", b =>
                {
                    b.Navigation("OrderedConsumables");
                });

            modelBuilder.Entity("OrderFlow.Data.Tables.Order", b =>
                {
                    b.Navigation("OrderedConsumables");
                });

            modelBuilder.Entity("OrderFlow.Data.Tables.Table", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
